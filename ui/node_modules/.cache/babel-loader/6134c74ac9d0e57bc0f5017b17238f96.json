{"ast":null,"code":"import axios from 'axios';\nimport { call, put, takeEvery } from 'redux-saga/effects';\nimport { SET_CREDENTIALS } from '../constants/ActionTypes';\n\nconst getCredentials = () => {\n  const token = localStorage.getItem('token');\n  const data = axios('/api/v1/nguoidung', {\n    headers: {\n      Authorization: token\n    }\n  }).then(response => response.data);\n  return data;\n};\n\nfunction* setCredentials() {\n  console.log('set cridentials');\n  const credentials = yield call(getCredentials);\n  yield put({\n    type: SET_CREDENTIALS,\n    payload: credentials\n  });\n}\n\nexport default function* watchUserAsync() {\n  yield takeEvery('SET_CREDENTIALS_ASYNC', setCredentials);\n}","map":{"version":3,"sources":["/home/thai/project/banhang/ui/src/sagas/user.js"],"names":["axios","call","put","takeEvery","SET_CREDENTIALS","getCredentials","token","localStorage","getItem","data","headers","Authorization","then","response","setCredentials","console","log","credentials","type","payload","watchUserAsync"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AACA,SAASC,eAAT,QAAgC,0BAAhC;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,QAAMC,IAAI,GAAGT,KAAK,CAAC,mBAAD,EAAsB;AACtCU,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAEL;AADR;AAD6B,GAAtB,CAAL,CAIVM,IAJU,CAIJC,QAAD,IAAcA,QAAQ,CAACJ,IAJlB,CAAb;AAKA,SAAOA,IAAP;AACD,CARD;;AAUA,UAAUK,cAAV,GAA2B;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,QAAMC,WAAW,GAAG,MAAMhB,IAAI,CAACI,cAAD,CAA9B;AACA,QAAMH,GAAG,CAAC;AAAEgB,IAAAA,IAAI,EAAEd,eAAR;AAAyBe,IAAAA,OAAO,EAAEF;AAAlC,GAAD,CAAT;AACD;;AAED,eAAe,UAAUG,cAAV,GAA2B;AACxC,QAAMjB,SAAS,CAAC,uBAAD,EAA0BW,cAA1B,CAAf;AACD","sourcesContent":["import axios from 'axios';\nimport { call, put, takeEvery } from 'redux-saga/effects';\nimport { SET_CREDENTIALS } from '../constants/ActionTypes';\n\nconst getCredentials = () => {\n  const token = localStorage.getItem('token');\n  const data = axios('/api/v1/nguoidung', {\n    headers: {\n      Authorization: token,\n    },\n  }).then((response) => response.data);\n  return data;\n};\n\nfunction* setCredentials() {\n  console.log('set cridentials');\n  const credentials = yield call(getCredentials);\n  yield put({ type: SET_CREDENTIALS, payload: credentials });\n}\n\nexport default function* watchUserAsync() {\n  yield takeEvery('SET_CREDENTIALS_ASYNC', setCredentials);\n}\n"]},"metadata":{},"sourceType":"module"}